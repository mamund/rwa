<?xml version="1.0"?>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt'?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc rfcedstyle="yes"?>
<?rfc toc="yes"?>

<!-- BELOW YOU MAY NEED TO MODIFY THE ATTRIBUTE; IF NOT SURE CONSULT WITH THE MAILING LIST-->
<rfc docName="draft-amundsen-richardson-alps-00" ipr="trust200902">
    <!-- front matter -->
    <front>
        <title abbrev="Application-Level Profile Semantics">
            Application-Level Profile Semantics (ALPS)
        </title>
        <author fullname="Mike Amundsen" surname="Amundsen" initials="M.">
            <organization>Layer 7 Technologies</organization>
            <address>
                <email>mca@amundsen.com</email>
                <uri>http://amundsen.com</uri>
            </address>
        </author>
        <author fullname="Leonard Richardson" surname="Richardson" initials="L.">
            <address>
                <email>leonardr@segfault.org</email>
                <uri>http://crummy.com</uri>
            </address>
        </author>
        <date/>
        <abstract>
            <t>
                This document describes a media type for defining application-level
                semantic descriptions (similar to those defined by HTML
                microformats) in a way that incorporates both human-readable documentation
                and machine-readable instructions on applying semantic descriptions
                to elements within a wide range of media-type
                representations.
            </t>
        </abstract>
        <note title="Editorial Note (To be removed by RFC Editor)">
            <t>
            Distribution of this document is unlimited. Comments should be sent to the 
            IETF Media-Types mailing list (see <eref target="https://www.ietf.org/mailman/listinfo/media-types"/>).
            </t> 
        </note>
    </front>

    <!-- main body -->
    <middle>
        <section title="Introduction">
            <t>
                This document describes a media type for defining application-level
                semantic descriptions (similar to those defined by HTML microformats)
                in a way that incorporates both human-readable documentation
                and machine-readable instructions on applying semantic descriptions
                to elements within application-agnostic media-type representations
                (such as HTML, HAL, Collection+JSON, and Siren). This document also
                sets a standard for creating and registering ALPS document identifers
                and provides suggested conventions for applying ALPS descriptors to
                existing media types.
            </t>
            <t>
                This document registers two media-type identifiers with the
                IANA:  <spanx style="verb">application/alps+xml</spanx> ("ALPS+XML") 
                and <spanx style="verb">application/alps+json</spanx> ("ALPS+JSON").
            </t>
        </section>
        <section title="Notational Conventions">
            <t>
            The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
            "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
            document are to be interpreted as described in <xref target="RFC2119"/>.
            </t>
        </section>
        <section title="Motivation">
            <t>
                When implementing a hypermedia client/server application using
                a general media type (i.e. HTML, Atom, Collection+JSON, etc.),
                client and server instances need to share application-specific
                information such as data element names, link relation values, and state
                transfer parameters. This information is directly related to the
                application being implemented (i.e. accounting, contact management, etc.)
                rather than the media type used in the representations.

                Instead of creating (and registering) an entirely new media
                type (i.e. <spanx style="verb">application/accounting</spanx>), representation authors can use an
                ALPS "profile" to apply application-level semantic descriptions to
                elements  defined by the generic media type. This increases the
                specificity of  the representation without reducing the generality of the media
                type.
            
            </t>
        </section>
        <section title="Identifying an ALPS Document">
            <t>
                ALPS vocabularies are identified by a unique URL. 
                The URL SHOULD point to a valid ALPS document. The URL MAY 
                point to a human-readable document that describes the ALPS
                specification for the identified use case.  

                Although the URI SHOULD point to a resource that contains a 
                definition of the semantics of the relation type, clients 
                SHOULD NOT automatically access that resource to avoid
                overburdening its server.
                
                [I almost feel like we should have two URLs, an ALPS permalink
                and a human-readable doc. Or should we suggest the use of content
                negotiation? -leonardr]

                All ALPS URIs MUST be unique and all ALPS documents intended
                for public consumption SHOULD be registered in the ALPS Registry
                located
                at [TK].
            </t>
        </section>
        <section title="ALPS Documents">
            <t>
                ALPS Documents contain a machine-readable
                collection of identifying strings and their human-readable
                explanations. An ALPS document can be represented in either 
                XML or JSON format. This section identifies the general 
                elements and properties of an ALPS document, their meaning, 
                and their use. Additional subsections provide specific details
                on how to construct a valid ALPS document in XML and in JSON format.
            </t>
            <t>
                [LR: need a section that syas URL can be used as an abstract
                semantic type]
            </t>
            <section title="Compliance">
                <t>
                    An implementation is not compliant if it fails to satisfy
                    one or more of the MUST or REQUIRED level requirements. An implementation that
                    satisfies all the MUST or REQUIRED level and all the SHOULD level
                    requirements is said to be "unconditionally compliant"; one that satisfies all
                    the MUST level requirements but not all the SHOULD level requirements is
                    said to be "conditionally compliant."
                </t>
            </section>
            <section title="ALPS Document Properties">
                <t>
                    The ALPS media type defines a small set of properties. The
                    properties appear in both the XML and JSON formats, but are expressed
                    in  different ways. Below is a list of the properties that can
                    appear in an ALPS document.
                </t>
                <section title="alps">
                <t>
                    Indicates the root of the ALPS document. This MUST be the
                    first property
                    in the document. This property SHOULD have one or more
                    +element+ child 
                    properties.
                </t>
                <t>
                    [Would it be okay to remove the 'must be the first property
                    in the
                    document' requirement? This would allow an ALPS doc to be
                    embedded in
                    other docs. It would also make it possible to define ALPS
                    as a
                    microformat. -leonardr]
                </t>
            </section>
            <section title="appears">
                <t>
                    Indicates the appearance rules to apply to the related
                    +element+.
                    Valid values for this element are: 'MUST', 'SHOULD', and 'MAY'. These
                    values are to be treated as defined in RFC 2119. The
                    +appears+
                    property SHOULD appear as a property of the +element+
                    and/or +child+
                    elements. If this property does not appear, the value
                    SHOULD be
                    treated as 'MAY'.
                     </t>
                <t>
                
                    [You've removed MUST NOT and the default MUST NOT for
                    top-level
                    elements, which makes it difficult to define documents like
                    hCalendar. I've written an alternate section below.
                    -leonardr]
                    </t>
                <t>
                 
                    Indicates the appearance rules for the related +element+ in
                    a
                    representation. All valid values for this property are
                    terms defined in RFC
                    2119, and have the meaning given in that standard.
                   </t>
                <t>
                  
                    The +appears+ property MAY appear as a property of the
                    +element+
                    block. This controls whether the element may appear at the
                    "top
                    level"; that is, not enclosed in any other element defined
                    by this
                    ALPS document. The formal meaning of "top level" varies by
                    the media
                    type; see "Applying ALPS to Existing Media Types" for
                    definitions. [that's TK -leonardr]
                  </t>
                <t>
                   
                    Valid values for +appears+ in an +element+ block are: 'MUST',
                    'SHOULD', 'MAY', and 'MUST NOT'. If this property does not
                    appear, the
                    value SHOULD be treated as 'MUST NOT'.
                 </t>
                <t>
                    
                    The +appears+ property MAY appear as a property of
                    a +child+
                    block. This controls the rules by which the referenced
                    element may
                    appear as a child of the enclosing +element+. The formal
                    meaning of
                    "enclosing +element+" varies by the media type; see
                    "Applying ALPS to
                    Existing Media Types" for definitions. [that's TK -leonardr]
                </t>
                <t>
                    Valid values for +appears+ in an +child+ block are: 'MUST',
                    'SHOULD', and 'MAY'. If this property does not appear, the
                    value
                    SHOULD be treated as 'MAY'.
                </t>
            </section>
            <section title="cardinality">
                <t>
                    Indicates the number of times the related +element+ can
                    appear. Valid
                    values are 'single' and 'many'.
                  </t>
                <t>                
                    The +cardinality+ property MAY appear as a property of an
                    +element+
                    block. This controls how many times that element may be
                    used at the
                    "top level" within a single representation.
                 </t>
                <t>
                    The +cardinality+ property MAY appear as a property of
                    a +child+
                    block. This controls how many times the child element may
                    occur within
                    its enclosing element.
                </t>
                <t>
                    If this property does not appear, the value SHOULD be
                    treated as
                    'many'.
                </t>
            </section>
            <section title="child">
                <t>
                    Links to a child element of the related +element+ This MAY
                    appear in
                    the ALPS document as a child of an +element+ block. The
                    +child+
                    property MAY have an +href+ property pointing to
                    a definition of an
                    +element+ block (see +href+ for details).
                </t>
                <t>
                    If no +href+ appears, then the +child+ property takes on
                    the same
                    features as the +element+ property. [Which ones? It would
                    also be good
                    to mention here which properties the +child+ tag supports,
                    as you do for
                    +element+. -leonardr]
                </t>
            </section>
            <section title="description">
                <t>
                    A text field that contains free-form, usually
                    human-readable, text.
                </t>
                <t>
                    A +description+ block SHOULD appear as a child of
                    +element+. When
                    present, it describes the meaning and use of the related
                    +element+.
                </t>
                <t>
                    A +description+ block MAY appear as a child of +child+.
                    When present,
                    it describes the meaning of the relationship between the
                    +element+ and
                    its +child+.
                </t>
                <t>
                    A +description+ block MAY appear as a child of +alps+. When
                    present,
                    it describes the purpose of the ALPS document as a whole.
                </t>
                <t>
                    [When writing the example docs I kept wanting to use HTML
                    markup. Obviously you can do this in ALPS+XML by using
                    namespaces. Can
                    we explicitly say that the contents of +description+ may be
                    HTML
                    markup, a la the contents of an Atom story? -leonardr]
                </t>
            </section>
            <section title="element">
                <t>
                    Identifies a semantic descriptor. One or more +element+
                    blocks SHOULD
                    appear as children of the +alps+ property.
                </t>
                <t>
                    This property MUST have the following properties:
                </t>
                <list>
                    <t>id</t>
                    <t>type</t>
                </list>
                <t>
                    It SHOULD have the following properties:
                </t>
                <list>
                    <t>appears</t>
                </list>
                <t>
                    It MAY have the following properties:
                </t>
                <list>
                    <t>cardinality</t>
                    <t>child</t>
                    <t>description</t>
                    <t>name</t>
                </list>
            </section>
            <section title="ext">
                [MCA: &lt;ext name="{uri}" value="" /&gt;]
            </section>
            <section title="name">
                <t>
                    Indicates the name of the +element+ as found in generic
                    representations. It MAY appear as a property of the
                    +element+.
                </t>
                <t>
                    This is used when the +element+'s name is used as an +id+
                    value
                    elsewhere in the ALPS document. For instance, if a single
                    ALPS
                    document defines an element descriptor called 'customer'
                    and a
                    safe-idempotent control called 'customer', they can't both
                    have
                    +id="customer"+ in the ALPS document. One of them needs to
                    have some
                    other +id+, and to set +name="customer"+.
                </t>
            </section>
            <section title="href">
                <t>
                    Points to an +element+ either within the existing ALPS
                    document or in
                    another ALPS document.
                </t>
                <t>
                    The +href+ attribute MUST appear as part of the +child+
                    element. The
                    value MUST be a valid URL, with a fragment identifier,
                    resolving to an
                    +element+ within an ALPS document.
                </t>
                <t>
                    [Should &lt;alps&gt; itself support +href+ so it can link to
                        itself or a
                        full human-readable doc? Or should we allow a general
                        &lt;link&gt; tag so you can do rel="help"?]

                            \[ Earlier you said that +child+ didn't need href.
                            -leonardr \]

                            [I have a half-baked idea about using +href+ within
                            +element+ as well.
                            This would let you copy the +fn+ descriptor defined
                            in hCard into your
                            custom ALPS document (for performance reasons) but
                            still make it clear
                            that your +fn+ descriptor has the same meaning as
                            the one defined in
                            hCard. -leonardr]
                </t>
            </section>
            <section title="id">
                <t>
                    A document-wide unique identifier for the related element.
                    This MUST
                    appear as a property of each +element+.
                </t>
                <t>
                    The value of this property will appear within generic
                    representations
                    as the name of a semantic descriptor or hypermedia control
                    (see
                    Applying ALPS to Existing Media Types for details). The
                    exception is
                    when an element defines +name+ as well as +id+. In that
                    case, the
                    value of +name+ contains the name of the semantic
                    descriptor or
                    hypermedia control, and the value of +id+ is just a unique
                    ID.
                </t>
                <t>
                    When applied to an ALPS document, a URI fragment identifier
                    points to
                    the element with the appropriate +id+. For example, The
                    fragment
                    identifier +customer+ in the URI
                    +http://example.com/#customer+ refers
                    to an ALPS element with +id+ set to +customer+.
                </t>
                <t>
                    A relative URL with a fragment identifier (e.g. "#customer") refers to
                    an element within the ALPS document containing the
                    reference.
                </t>
            </section>
            <section title="type">
                <t>
                    Indicates the type of representation control to which the
                    +element+ is
                    applied. This MUST appear for each +element+. Four values
                    are defined:
                </t>
                <t>
                    \[ Would it be OK to say that the default is 'descriptor'?
                    -leonardr \]
                </t>
                <list style="numbers">
                    <t>
                        'descriptor' refers to a state element (e.g.
                        +HTML.SPAN+, +HTML.INPUT+, etc.).
                    </t>
                    <t>
                        'safe-idempotent' refers to a hypermedia control that
                      triggers a safe,
                      idempotent state transition (i.e. +HTTP.GET+,
                      +HTTP.HEAD+, etc.).
                    </t>
                    <t>
                        'unsafe-idempotent' refers to a hypermedia control
                       that triggers an
                       unsafe, idempotent state transition (i.e. +HTTP.PUT+,
                       +HTTP.DELETE+ etc.).
                   </t>
                   <t>
                       'unsafe-nonidempotent' refers to a hypermedia control
                        that triggers an
                        unsafe, non-idempotent state transition (i.e.
                        +HTTP.POST+).
                    </t>
                </list>
                <t>
                    \[ How about just idempotent and nonidempotent?
                        -leonardr \]
                </t>
            </section>
            <section title="version">
                <t>
                    Indicates the version number of the ALPS document. This
                    SHOULD appear as a 
                    property of the +alps+ property. Currently the only valid
                    value is '1.0'. 
                    If no value appears, then it SHOULD be set to '1.0'.
                </t>
            </section>
        </section>
        <section title="XML Representation">
        </section>
        <section title="JSON Representation">
        </section>
        <section title="RDFs+OWL Representation">
            [MCA: added here as a reminder.]
        </section>
    </section>
        <section title="Instructions on Applying ALPS to Existing Media Types">
            <t>
                ALPS documents can be applied to many existing hypermedia
                types. Below are a set of instructional examples on how to 
                apply ALPS information to existing media types.
                These examples are informative. The most up-to-date
                guidance on applying ALPS documents to existing media types are
                available at the official ALPS Web site (http://alps.io).
            </t>
            <t>
                [LR:say what it takes to explain how alps applies to a media
                type you have to define "enclosing element", "link", etc]
            </t>
            <section title="A Simple ALPS Document">
            </section>
            <section title="HTML Example">
            </section>
            <section title="Collection+JSON Example">
            </section>
            <section title="Linking to ALPS Documents">
                <t>
                    When a representation links to an ALPS document describing
                    its
                    semantics, the "profile" link relation (found in the
                    IANA link
                    registry) SHOULD be used to describe the relationship
                    between the
                    representation and the ALPS document.
                </t>
                <t>
                    A single representation may be "profile"-ed more than one
                    ALPS
                    document. If two ALPS documents give conflicting semantics
                    for the
                    same element, the document linked to earlier in the
                    representation
                    SHOULD take precedence.
                </t>
            </section>
        </section>
        <section title="The ALPS Registry">
            <section title="What is the ALPS Registry">
            </section>
            <section title="Searching the Registry">
            </section>
            <section title="Contributing to the Registry">
            </section>
        </section>
        <section title="IANA Considerations">
             <t>
                <cref>INSERT TEXT</cref>
            </t>
            
        </section>
        <section title="Security Considerations">
            <t>
                <cref>INSERT TEXT</cref>
            </t>
        </section>
        <section title="Internationalisation Considerations">
            <t>
                <cref>INSERT TEXT (CONSIDER RFC 5987)</cref>
            </t>
        </section>
    </middle>

    <!-- back matter -->
    <back>
        <references title="Normative References">
            <reference anchor="RFC2119">
                <front>
                    <title>Key words for use in RFCs to Indicate Requirement Levels</title>
                    <author initials="S." surname="Bradner" fullname="Scott Bradner">
                        <organization>Harvard University</organization>
                        <address><email>sob at harvard.edu</email></address>
                    </author>
                    <date month="March" year="1997"/>
                </front>
                <seriesInfo name="BCP" value="14"/>
                <seriesInfo name="RFC" value="2119"/>
            </reference>
            <reference anchor="RFC5988">
                <front>
                    <title>Web Linking</title>
                    <author fullname="Mark Nottingham" initials="M." surname="Nottingham">
                        <address><email>mnot at mnot.net</email></address>
                    </author>
                    <date month="October" year="2010" />
                </front>
                <seriesInfo name="RFC" value="5988"/>
            </reference>
        </references>
    </back>
</rfc>
