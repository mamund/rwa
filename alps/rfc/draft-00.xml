<?xml version="1.0"?>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt'?>

<!-- external references as entities -->
<!DOCTYPE rfc SYSTEM "http://xml.resource.org/authoring/rfc2629.dtd" [
    <!ENTITY rfc2119 PUBLIC ""
        "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
    <!ENTITY rfc3023 PUBLIC ""
        "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3023.xml">
    <!ENTITY rfc4627 PUBLIC ""
        "http://xml.resource.org/public/rfc/bibxml/reference.RFC.4627.xml">
    <!ENTITY rfc5988 PUBLIC ""
        "http://xml.resource.org/public/rfc/bibxml/reference.RFC.5988.xml">
]>

<!-- ref commands -->
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc rfcedstyle="yes"?>
<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>

<!-- the actual document! -->
<rfc docName="draft-amundsen-richardson-alps-00" ipr="trust200902">
    <!-- front matter -->
    <front>
        <title abbrev="Application-Level Profile Semantics">
            Application-Level Profile Semantics (ALPS)
        </title>
        <author fullname="Mike Amundsen" surname="Amundsen" initials="M.">
            <organization>Layer 7 Technologies</organization>
            <address>
                <email>mca@amundsen.com</email>
                <uri>http://amundsen.com</uri>
            </address>
        </author>
        <author fullname="Leonard Richardson" surname="Richardson" initials="L.">
            <address>
                <email>leonardr@segfault.org</email>
                <uri>http://crummy.com</uri>
            </address>
        </author>
        <date/>
        <abstract>
            <t>
                This document describes a media type for defining application-level
                semantic descriptions (similar to those defined by HTML
                microformats) in a way that incorporates both human-readable documentation
                and machine-readable instructions on applying semantic descriptions
                to elements within a wide range of media-type
                representations.
            </t>
        </abstract>
        <note title="Editorial Note (To be removed by RFC Editor)">
            <t>
            Distribution of this document is unlimited. Comments should be sent to the 
            IETF Media-Types mailing list (see 
            <eref target="https://www.ietf.org/mailman/listinfo/media-types"/>).
            </t> 
        </note>
    </front>

    <!-- main body -->
    <middle>
        <section title="Introduction">
            <t>
                This document describes a media type for defining application-level
                semantic descriptions (similar to those defined by HTML microformats)
                in a way that incorporates both human-readable documentation
                and machine-readable instructions on applying semantic descriptions
                to elements within application-agnostic media-type representations
                (such as HTML, HAL, Collection+JSON, and Siren). This document also
                sets a standard for creating and registering ALPS document identifers
                and provides suggested conventions for applying ALPS descriptors to
                existing media types.
            </t>
            <t>
                This document registers two media-type identifiers with the
                IANA:  'application/alps+xml' ("ALPS+XML") and 
                'application/alps+json' ("ALPS+JSON").
            </t>
            <section title="Notational Conventions">
                <t>
                The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
                "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
                document are to be interpreted as described in <xref target="RFC2119"/>.
                </t>
            </section>
            <section title="Motivation">
                <t>
                    When implementing a hypermedia client/server application using
                    a general media type (i.e. HTML, Atom, Collection+JSON, etc.),
                    client and server instances need to share application-specific
                    information such as data element names, link relation values, 
                    and state transfer parameters. This information is directly 
                    related to the application being implemented (i.e. accounting, 
                    contact management, etc.) rather than the media type used 
                    in the representations.
                </t>
                <t>
                    Instead of creating (and registering) an entirely new media
                    type (i.e. 'application/accounting'), representation 
                    authors can use an ALPS "profile" to apply application-level 
                    semantic descriptions to elements  defined by the generic 
                    media type. This increases the  specificity of  the 
                    representation without reducing the generality of the media
                    type.
                </t>
            </section>
            <section title="A Simple ALPS Example">
                <t>[TK]</t>
            </section>
            <section title="Identifying an ALPS Document">
                <t>
                    ALPS vocabularies are identified by a unique URL. 
                    The URL SHOULD point to a valid ALPS document. The URL MAY 
                    point to a human-readable document that describes the ALPS
                    specification for the identified use case.  
                </t>
                <t>
                    Although the URI SHOULD point to a resource that contains a 
                    definition of the semantics of the relation type, clients 
                    SHOULD NOT automatically access that resource to avoid
                    overburdening its server.
                </t>
                <t>
                    [I almost feel like we should have two URLs, an ALPS permalink
                    and a human-readable doc. Or should we suggest the use of content
                    negotiation? -leonardr]
                </t>
                <t>
                    All ALPS URIs MUST be unique and all ALPS documents intended
                    for public consumption SHOULD be registered in the ALPS Registry
                    located
                    at [TK].
                </t>
            </section>
        </section>
       <section title="ALPS Documents">
            <t>
                ALPS Documents contain a machine-readable
                collection of identifying strings and their human-readable
                explanations. An ALPS document can be represented in either 
                XML or JSON format. This section identifies the general 
                elements and properties of an ALPS document, their meaning, 
                and their use. Additional subsections provide specific details
                on how to construct a valid ALPS document in XML and in JSON format.
            </t>
            <t>
                [LR: need a section that syas URL can be used as an abstract
                semantic type]
            </t>
            <section title="Compliance">
                <t>
                    An implementation is not compliant if it fails to satisfy
                    one or more of the MUST or REQUIRED level requirements. 
                    An implementation that satisfies all the MUST or REQUIRED 
                    level and all the SHOULD level requirements is said to be 
                    "unconditionally compliant"; one that satisfies all
                    the MUST level requirements but not all the SHOULD level 
                    requirements is said to be "conditionally compliant."
                </t>
            </section>
            <section title="ALPS Document Properties">
                <t>
                    The ALPS media type defines a small set of properties. The
                    properties appear in both the XML and JSON formats, but are 
                    expressed in  different ways. Below is a list of the 
                    properties that can appear in an ALPS document.
                </t>
                <section title="'alps'">
                    <t>
                        Indicates the root of the ALPS document. This property 
                        SHOULD have one or more 'element' child 
                        properties.
                    </t>
                </section>
                <section title="'appears'">
                <t>
                    Indicates the appearance rules for the related 'element' in
                    a representation. All valid values for this property are
                    terms defined in <xref target="RFC2119" />, and have the 
                    meaning given in that standard.
                </t>
                <section title="Applied to the 'element' block">
                    <t>
                        The 'appears' property MAY appear as a property of the
                        'element' block. This controls whether the element may 
                        appear at the "top level"; that is, not enclosed in any 
                        other element defined by this ALPS document. The formal 
                        meaning of "top level" varies by the media type; see 
                        <xref target="instructions"/> for  definitions. 
                    </t>
                    <t>
                        Valid values for 'appears' in an 'element' block are: "MUST",
                        "SHOULD", "MAY", and "MUST NOT". If this property does not
                        appear, the value SHOULD be treated as "MUST NOT".
                    </t>
                </section>
                <section title="Applied to the 'child' block">
                    <t>
                        The 'appears' property MAY appear as a property of
                        a 'child' block. This controls the rules by which the 
                        referenced element may appear as a child of the 
                        enclosing 'element'. The formal meaning of
                        "enclosing 'element'" varies by the media type; see
                        <xref target="instructions" /> for definitions.
                    </t>
                    <t>
                        Valid values for 'appears' in an 'child' block are: "MUST",
                        "SHOULD", and "MAY". If this property does not appear, the
                        value  SHOULD be treated as "MAY".
                    </t>
                </section>
            </section>
            <section title="'cardinality'">
                <t>
                    Indicates the number of times the related 'element' can
                    appear. Valid values are "single" and "many".
                     If this property does not appear, the value SHOULD be
                    treated as "many".
                </t>
                <section title="Applied to the 'element' block">
                    <t>                
                        The 'cardinality' property MAY appear as a property of an
                        'element' block. This controls how many times that element 
                        may be used at the "top level" within a single representation.
                    </t>
                </section>
                <section title="Applied to the 'child' block">
                    <t>
                        The 'cardinality' property MAY appear as a property of
                        a 'child' block. This controls how many times the 'child' 
                        element may occur within its enclosing element.
                    </t>
                </section>
            </section>
            <section title="'child'">
                <t>
                    Links to a child element of the related 'element' This MAY
                    appear in the ALPS document as a child of an 'element' block. 
                    The 'child' property MAY have an 'href' property pointing to
                    a definition of an 'element' block (see 'href' for details).
                </t>
                <t>
                    If no 'href'' appears, then the 'child'' property takes on
                    the same features as the 'element'' property. [Which ones? 
                    It would also be good to mention here which properties the 
                    'child' tag supports, as you do for 'element''. -leonardr]
                </t>
            </section>
            <section title="'description'">
                <t>
                    A text field that contains free-form, usually
                    human-readable, text.
                </t>
                <t>
                    A 'description'' block SHOULD appear as a child of
                    'element''. When present, it describes the meaning and use 
                    of the related 'element'.
                </t>
                <t>
                    A 'description'' block MAY appear as a child of the 'child'
                    block. When present, it describes the meaning of the 
                    relationship between the 'element' and its 'child'.
                </t>
                <t>
                    A 'description'' block MAY appear as a child of 'alps'. 
                    When present, it describes the purpose of the ALPS document 
                    as a whole.
                </t>
                <t>
                    The 'description' element has one OPTIONAL sub-element:
                    'format' with two possible values:
                    <list style="numbers">
                        <t>"text"</t>
                        <t>"html"</t>
                    </list>
                    If the 'format' property is set to "html" the content
                    within the 'description' block MUST be treated as HTML markup.
                    If no 'format' property is present, the content SHOULD be
                    treated as plain text.
                </t>
            </section>
            <section title="'element'">
                <t>
                    Identifies a semantic descriptor. One or more 'element'
                    blocks SHOULD appear as children of the 'alps' property.
                </t>
                <t>
                    This property MUST have the following properties:
                    <list style="numbers">
                        <t>id</t>
                        <t>type</t>
                    </list>
                </t>
                <t>
                    It SHOULD have the following properties:
                    <list style="numbers">
                        <t>appears</t>
                    </list>
                </t>
                <t>
                    It MAY have the following properties:
                    <list style="numbers">
                        <t>cardinality</t>
                        <t>child</t>
                        <t>description</t>
                        <t>name</t>
                    </list>
                </t>
            </section>
            <section title="'ext'">
               <t>
                    The 'ext' element can be used to extend the ALPS document
                    with author-specific information. It provides a way to 
                    customize ALPS documents with additional properties not
                    covered in this specification. This is an OPTIONAL element.
                </t>
                <t>
                    The 'ext' element has to properties. The 'name' property
                    MUST appear for the 'ext' element. It's value MUST be a
                    URI. The 'value' property MAY appear for the 'ext' element.
                    It's value is undefined in this specification.
                </t>
                <t>
                    Here is an XML representation of the 'ext' element:
                </t>
                <t>
                    &lt;ext name="{uri}" value="" /&gt;
                </t>
                <t> 
                    Tihe 'ext' element MAY appear as a child of the following
                    elements:
                    <list style="numbers">
                        <t>'alps'</t>
                        <t>'element'</t>
                        <t>'child'</t>
                    </list>
                </t>
                <t>
                    Since the 'ext' element has no specific meaning within 
                    the this specification, it MUST be ignored by any
                    application that does not understand it's use and meaning.
                </t>
                <t>
                    Authors who define 'ext' elements SHOULD register these
                    extensions with the ALPS Registry (see <xref
                    target="alps-registry"/>) and use the URI provided by
                    the registry in the 'name' property of their extension.
                </t>
            </section>
            <section title="'href'">
                <t>
                    Points to an 'element' either within the existing ALPS
                    document or in another ALPS document.
                </t>
                <t>
                    The 'href'' attribute MUST appear as part of the 'child'
                    element. The value MUST be a valid URL, with a fragment 
                    identifier, resolving to an 'element' within an ALPS 
                    document.
                </t>
                <t>
                    [Should &lt;alps&gt; itself support +href+ so it can link 
                    to itself or a full human-readable doc? Or should we allow 
                    a general &lt;link&gt; tag so you can do rel="help"?]

                    [Earlier you said that +child+ didn't need href. -leonardr]

                    [I have a half-baked idea about using +href+ within
                    'element' as well.  This would let you copy the +fn+ 
                    descriptor defined in hCard into your custom ALPS document 
                    (for performance reasons) but still make it clear that 
                    your +fn+ descriptor has the same meaning as the one defined 
                    in hCard. -leonardr]
                </t>
            </section>
            <section title="'id'">
                <t>
                    A document-wide unique identifier for the related element.
                    This MUST appear as a property of each 'element'.
                </t>
                <t>
                    The value of this property will appear within generic
                    representations as the name of a semantic descriptor or 
                    hypermedia control (see <xref target="instructions" /> for 
                    details). The exception is when an element defines 'name'
                    as well as 'id'. In that case, the value of 'name'
                    contains the name of the semantic descriptor or
                    hypermedia control, and the value of 'id'' is just a unique
                    ID for the current document.
                </t>
                <t>
                    When applied to an ALPS document, a URI fragment identifier
                    points to the element with the appropriate 'id''. For example, 
                    the fragment identifier "customer" in the URI
                    http://example.com/#customer refers to an ALPS element 
                    with 'id' set to "customer".
                </t>
                <t>
                    A relative URL with a fragment identifier (e.g. "#customer") 
                    refers to an element within the ALPS document containing the
                    reference.
                </t>
            </section>
            <section title="'name'">
                <t>
                    Indicates the name of the 'element'' as found in generic
                    representations. It MAY appear as a property of the
                    'element'.
                </t>
                <t>
                    This is used when the name of the 'element' is used as an 
                    'id' value elsewhere in the ALPS document. For instance, 
                    if a single ALPS document defines an element descriptor 
                    called "customer" and a safe-idempotent control called 
                    "customer", they can't both have 'id="customer"' in the 
                    ALPS document. One of them needs to have some other 'id', 
                    and to set 'name="customer"''.
                </t>
            </section>
           <section title="'type'">
                <t>
                    Indicates the type of representation control to which the
                    element is applied. This MUST appear for each element. 
                    Four valid values are defined:
                
                    <list style="numbers">
                        <t>
                            "descriptor"" refers to a state element (e.g.
                            HTML.SPAN, HTML.INPUT, etc.).
                        </t>
                        <t>
                           "safe"' refers to a hypermedia control that
                           triggers a safe, idempotent state transition 
                           (i.e. HTTP.GET, HTTP.HEAD, etc.).
                        </t>
                        <t>
                            "idempotent" refers to a hypermedia control
                            that triggers an unsafe, idempotent state 
                            transition (i.e. HTTP.PUT, HTTP.DELETE etc.).
                       </t>
                       <t>
                            "unsafe" refers to a hypermedia control
                            that triggers an unsafe, non-idempotent state 
                            transition (i.e. HTTP.POST).
                        </t>
                    </list>
                    
                    If no 'type' property is associated with the element
                    then the 'type="descriptor"' is implied.
                    
                </t>
            </section>
            <section title="'version'">
                <t>
                    Indicates the version number of the ALPS document. This
                    SHOULD appear as a property of the 'alps'' property. 
                    Currently the only valid value is "1.0". 
                    If no value appears, then it SHOULD be set to "1.0".
                </t>
            </section>
        </section>
        <section anchor="xml-representation" title="XML Representation">
            <t>[TK]</t>
        </section>
        <section anchor="json-representation" title="JSON Representation">
            <t>[TK]</t>
        </section>
    </section>
    <section anchor="instructions" 
        title="Instructions on Applying ALPS to Existing Media Types">
            <t>
                ALPS documents can be applied to many existing hypermedia
                types. Below are a set of instructional examples on how to 
                apply ALPS information to existing media types.
                These examples are informative. The most up-to-date
                guidance on applying ALPS documents to existing media types are
                available at the official ALPS Web site (http://alps.io).
            </t>
            <t>
                [LR:say what it takes to explain how alps applies to a media
                type you have to define "enclosing element", "link", etc]
            </t>
            <section anchor="a-simple-alps-document" title="A Simple ALPS Document">
                <t>[TK]</t>
            </section>
            <section anchor="html-example" title="HTML Example">
                <t>[TK]</t>
            </section>
            <section anchor="collection-json-example" title="Collection+JSON Example">
            </section>
            <section anchor="linking-to-alps-documents" title="Linking to ALPS Documents">
                <t>
                    When a representation links to an ALPS document describing
                    its semantics, the "profile" link relation (found in the
                    IANA link registry) SHOULD be used to describe the relationship
                    between the representation and the ALPS document.
                </t>
                <t>
                    A single representation may be "profile"-ed more than one
                    ALPS  document. If two ALPS documents give conflicting semantics
                    for the same element, the document linked to earlier in the
                    representation SHOULD take precedence.
                </t>
            </section>
        </section>
        <section anchor="alps-registry" title="The ALPS Registry">
            <section anchor="what-is-the-alps-registry" 
                title="What is the ALPS Registry">
                 <t>[TK]</t>
           </section>
            <section anchor="searching-the-registry" 
                title="Searching the Registry">
                  <t>[TK]</t>
          </section>
            <section anchor="contributing-to-the-registry" 
                title="Contributing to the Registry">
                   <t>[TK]</t>
         </section>
        </section>
        <section anchor="iana-considerations" title="IANA Considerations">
             <t>
                 This specification establishes two media types:
                 'application/alps+xml' and 'application/alps+json'
            </t>
            <section anchor="iana-alps-xml" title="application/alps+xml">
                <t>
                    <list style="hanging">
                        <t hangText="Type name:">
                            application
                        </t>
                        <t hangText="Subtype name:">
                            alps+xml
                        </t>
                        <t hangText="Required parameters:">
                            None
                        </t>
                        <t hangText="Optional parameters:">
                            <list style="hanging">
                                <t hangText="charset">
                                    This parameter has identical semantics to the
                                    charset parameter of the 'application/xml'
                                    media type as specified in <xref target="RFC3023" />.
                                </t>
                            </list>
                        </t>
                        <t hangText="Encoding considerations:">
                            <list style="hanging">
                                <t hangText="binary">
                                    Same as encoding considerations of
                                    application/xml as specified in <xref
                                        target="RFC3023" />.
                                </t>
                            </list>
                        </t>
                        <t hangText="Security considerations:">
                            This format shares security issues common to all XML
                            content types. It does not provide executable content. 
                            Information contained in ALPS documents do not 
                            require privacy or integrity services.
                        </t>
                        <t hangText="Interoperability considerations:">
                            ALPS is not described by a DTD and applies only
                            the well-formedness rules of XML. It should only 
                            be parsed by a non-validating parser.
                        </t>
                        <t hangText="Published specification:">
                            This Document
                        </t>
                        <t hangText="Applications that use this media type:">
                            Various
                        </t>
                        <t hangText="Additional information:">
                            <list style="hanging">
                                <t hangText="magic number(s):">
                                    none
                                </t>
                                <t hangText="file extensions:">
                                    .xml
                                </t>
                                <t hangText="macintosh type file code:">
                                    TEXT
                                </t>
                                <t hangText="object idenfiers:">
                                    none
                                </t>
                            </list>
                        </t>
                        <t hangText="person to contact for further information:">
                            <list style="hanging">
                                <t hangText="Name:">
                                    Mike Amundsen
                                </t>
                                <t hangText="Email:">
                                    mca@amundsen.com
                                </t>
                            </list>
                        </t>
                        <t hangText="Intended usage:">
                            Common
                        </t>
                        <t hangText="Author/change controller:">
                            Mike Amundsen
                        </t>
                    </list>
                </t>
            </section>
            <section anchor="iana-alps-json" title="application/alps+json">
                 <t>
                    <list style="hanging">
                        <t hangText="Type name:">
                            application
                        </t>
                        <t hangText="Subtype name:">
                            alps+json
                        </t>
                        <t hangText="Required parameters:">
                            None
                        </t>
                        <t hangText="Optional parameters:">
                            None
                        </t>
                        <t hangText="Encoding considerations:">
                            binary
                        </t>
                        <t hangText="Security considerations:">
                            This media type shares security issues common to
                            all JSON content types. See <xref target="RFC4627"/> 
                            Section #6 for additional information. ALPS+JSON
                            does not provide executable content.
                            Information contained in ALPS+JSON documents
                            do not require privacy or integrity services.
                        </t>
                        <t hangText="Interoperability considerations:">
                            None
                        </t>
                        <t hangText="Published specification:">
                            This Document
                        </t>
                        <t hangText="Applications that use this media type:">
                            Various
                        </t>
                        <t hangText="Additional information:">
                            <list style="hanging">
                                <t hangText="magic number(s):">
                                    none
                                </t>
                                <t hangText="file extensions:">
                                    .json
                                </t>
                                <t hangText="macintosh type file code:">
                                    TEXT
                                </t>
                                <t hangText="object idenfiers:">
                                    none
                                </t>
                            </list>
                        </t>
                        <t hangText="person to contact for further information:">
                            <list style="hanging">
                                <t hangText="Name:">
                                    Mike Amundsen
                                </t>
                                <t hangText="Email:">
                                    mca@amundsen.com
                                </t>
                            </list>
                        </t>
                        <t hangText="Intended usage:">
                            Common
                        </t>
                        <t hangText="Author/change controller:">
                            Mike Amundsen
                        </t>
                    </list>
                </t>
            </section>
        </section>
        <section anchor="internationalization" 
            title="Internationalization Considerations">
            <t>[TK]</t>
            <t>
                <cref>insert text (consider rfc 5987)</cref>
            </t>
        </section>
        <section title="Acknowledgements">
            <t>[TK]</t>
        </section>
    </middle>

    <!-- back matter -->
    <back>
        <references title="Normative References">
            &rfc2119;
            &rfc3023;
            &rfc4627;
            &rfc5988;
        </references>
        <references title="Informative References">
           <t>[TK]</t>
       </references>
    </back>
</rfc>
