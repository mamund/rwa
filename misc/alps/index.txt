= Application-Level Profile Semantics =
Revision: 2012-10-29 (mca)

== Summary ==
This document describes a media type designed to allow Web application authors
and implementors a way to define, document, and apply application-level 
semantic descriptions to elements within media-type representations. This 
document also sets a standard for creating and registering ALPS document 
identifers and provides suggested conventions for applying ALPS descriptors 
to existing media types (HTML, JSON, and XML). 

This document registers two media-type identifiers with the IANA: 
+application/vnd.alps+xml+ and +application/vnd.alps+json+.

== Motivation ==
When implementing a hypermedia client/server application using an existing 
general media type (i.e. HTML, Atom, Collection+JSON, etc.), client and server 
instances need to share application-specific information such as data element 
names, link relation values, and state transfer parameters. This information 
is directly related to the application being implemented (i.e. accounting, 
contact management, etc.) rather than the media type used to represent the 
application state. 

Instead of creating (and registering) and entirely new media type (i.e. 
+application/accounting+), this standard allows representation authors define, 
document, and apply application-level semantic descriptions to elements 
within a representation. This increases the specificity of the representation 
without reducing the generality of the media type.

== Identifying an ALPS Document ==
ALPS vocabularies are identified by a unique URI. This URI can be in the form 
of a resolvable URL (i.e. +http://example.org/alps/accounting+) or it can be 
in the form of a URN (i.e. TK).

If the identifier is a URL, it SHOULD point to a valid ALPS document. the URL 
MAY point to a human-readable document that describes the ALPS specification 
for the identified use case.  If the identifier is a URN, it SHOULD NOT be 
treated as a resolvable identiferand instead SHOULD be treated as a unique 
name for the identified use case. 

All ALPS URIs MUST be unique and SHOULD be registered in the ALPS Registry 
located at [TK].

== ALPS Documents ==
ALPS Documents contain a machine-readable collection of semantic descriptors 
and their details. These document can be represented in either XML or JSON 
format. This section identifies the general elements and properties of an 
ALPS document, their meaning, and use. Additional sub sections provide 
specific details on how to construct a valid ALPS document in XML and in 
JSON format.

=== Compliance ===
An implementation is not compliant if it fails to satisfy one or more of the 
MUST or REQUIRED level requirements. An implementation that satisfies all 
the MUST or REQUIRED level and all the SHOULD level requirements is said 
to be "unconditionally compliant"; one that satisfies all the MUST level 
requirements but not all the SHOULD level requirements is said to be 
"conditionally compliant."

[NOTE]
===========================================
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", 
"SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to 
be interpreted as described in RFC 2119.
===========================================

=== ALPS Elements and Properties ===
The ALPS media type has a small set of elements and properties. These appear
in both the XML and JSON formats, but are expressed in different ways. Below
is a list of the elements and properties that can appear in an ALPS document.

==== +alps+ ====
This is the root element of the ALPS document. This MUST be the first element
in the document.

==== +appears+ ====
Indicates the appearance rules to apply to the related +element+. This 
SHOULD appear as a property of the +element+ and +child+ elements. Valid 
values for this element are: 'MUST', 'SHOULD', and 'MAY'. These values are 
to be treat asRFC 2119 key words. If this property does not appear, the
value SHOULD be set to 'MAY'.

==== +cardinality+ ====
Indicates the number of times the related +element+ can appear within a single
representation. Valid values are 'single' and 'many'. This MAY appear
as a property of the +element+ and +child+ elements. If this property does not
appear, the value SHOULD be set to 'single'.

==== +child+ ====
Indicates there is a child of the related +element+ This MAY appear as a 
sub-element of the +element+. The +child+ element MUST have an +href+
property pointing to the full +element+ that will appear as a child element
(see +href+ for details). 

==== +description+ ====
A text field that contains free-form, usually human-readable, text describing
the meaning and use of the related +element+. This SHOULD appear as a 
sub-element of +element+.

==== +element+ ====
Identifies a semantic descriptor. One or more +element+ blocks SHOULD appear
as children of the +alps+ element. 

==== +external_id+ ====
TK

==== +href+ ====
A valid URL that points to an +element+ either within the existing document
or in another document. This MUST appear as part of the +child+ element.

==== +id+ ====
Indicates the semantic descriptor value for the related +element+. This
MUST appear for each +element+. The value of this property contains the 
text that will appear within the media type representation as the value of
that media type's semantic descriptor (see Applying ALPS to Existing Media
Types for details). 

==== +type+ ====
Indicates the type of representation control to which the +element+ is
applied. Below is the explanation of the possible valid values.

 * 'descriptor' refers to an attribute of an element that can take on a
given value many times in a single representation.
 * 'link-relation' refers to a hypermedia control that triggers a safe
state transition (i.e. +HTTP.GET+, etc.).
 * 'idempotent-relation' refers to a hypermedia control that triggers an
idempotent state transition (i.e. +HTTP.PUT+, etc.).
 * 'unsafe-relation' refers to a hypermedia control that triggers an
unsafe state transition (i.e. +HTTP.POST+).
 
---------------------------------------
[MCA: pulled this out since i agree we don't need this one.]
 * 'unique' refers to an attribute of an element that can only take on a
given value once in a given representation. (Not really convinced we
need this one.)
--------------------------------------- 

==== +version+ ====
Indicates the version number of the ALPS document. This SHOULD appear as a 
property of the +alps+ elements. Currently the only valid
value is '1.0'. If no value appears, then it SHOULD be set to '1.0'.

=== XML Representation ===
Below shows how ALPS Elements are expressed in the XML format.

---------------------------------
<alps version="1.0">

 <element id="hmaze" type="descriptor" appears="MUST">
   <description>
      Indicates the root of an hMaze document.
    </description>
    <child href="#collection"/>
    <child href="#item"/>
    <child href="#error"/>
    <child href="#cell"/>
    <child href="#inventory-link"/>
  </element>
                   
  <element id="collection" type="descriptor">
    <description>A collection of mazes.</description>
    <child href="#cell" cardinality="many" appears="MAY">
      <description>The opening cell of a maze</description>
    </child>
  </element>
                          
  <element id="item" type="descriptor">
    <description>A single maze.</description>
    <child href="#start"/ appears="SHOULD">
  </element>
                                    
  <element id="start" type="link-relation">
    <description>The beginning cell of a maze.</description>
  </element>
                                        
  <element id="error" type="descriptor">
    <description>An error message.</description>
  </element>
                                            
  <element id="cell" type="descriptor">
    <description>A cell in a maze.</description>
    <child href="#title" appears="SHOULD">
      <description>
        The name of the cell, e.g. "Throne Room."
      </description>
    </child>
    <child href="#north" appears="MAY"/>
    <child href="#south" appears="MAY"/>
    <child href="#east" appears="MAY"/>
    <child href="#west" appears="MAY"/>
    <child href="#exit" appears="MAY"/>
    <child href="#current" appears="MUST"/>
  </element>
                                                                          
  <element id="north" type="link-relation">
    <description>The cell to the north of this one.</description>
  </element>
                                                                              
  ...
  [similarly for south, east, west, exit, current.]
  ...
                                                                               
  <element id="inventory-link" external_id="inventory" type="link-relation">
    <description>The player's inventory.</description>
  </element>
  
  <element id="inventory" type="descriptor">
    <description>
      Everything the player is carrying.
    </description>
    <child href="#treasure" cardinality="many" appears="MAY"/>
    <child href="#score" appears="MAY">
      The player's total score.
    </child>
  </element>
                                                                      
  <element id="treasure" type="descriptor">
    <id>treasure</id>
    <description>
      A treasure found in the maze.
    </description>
    <child href="#title" appears="SHOULD">
      <description>The name of this treasure, e.g. "Amethyst."</description>
    </child>
    <child href="#score" appears="MAY"/>
    <child href="#pickup" appears="MAY"/>
    <child href="#drop" appears="MAY"/>
  </element>
                                                                                  
  <element id="title" type="descriptor">
    <description>A title.</description>
  </element>
                                                                            
  <element id="score" type="descriptor">
    <description>A numeric score.</description>
  </element>
                                                                            
  <element id="pickup" type="idempotent-relation">
    <description>
      Picks up the treasure.
    </description>
  </element>
                                                     
  <element id="drop" type="idempotent-relation">
    <description>
      Drops the treasure.
    </description>
  </element>
                                                                                
</alps>
---------------------------------
=== JSON Representation ===
Below shows how ALPS Elements are expressed in the JSON format.

== Applying ALPS to Existing Media Types ==
ALPS documents can be applied to various existing hypermedia types. Below
are a set of instructions on how to apply ALPS information to existing 
media types.

[NOTE]
======================================
MCA:

I copied most of LR's content directly here w/ just a few changes.
I think more needs to be done to 'normalize' across various media types.
I agree that 'unique' can proly be dropped from the ALPS model (this is
an HTML-specific thing, right?). 

I also think we need to be a bit clearer on describing state transfers 
('link-relation', 'idemponent-relation', 'safe-relation', & 'unsafe-relation').
I suspect there is unneeded overlap/vague-ness here.

Finally, What isour position on providing descriptors for state transfers? IOW,
is this a MUST, SHOULD, MAY? or should that be left to the media type itself?
=======================================

=== ALPS and HTML ===
When applying ALPS to HTML, the following rules apply.

 * 'unique' :' becomes the +id+ of a tag.
 * 'descriptor' : becomes the +"class"+ of a tag.
 * 'idempotent-relation' : Element +id+ becomes the +"class"+ of the submit 
button of an +HTML.FORM@method="POST"+ [MCA : POST is non-idempotent]. 
If 'unique' or 'descriptor' children are present, those children refer to 
other inputs of the same +HTML.FORM+.
 * 'unsafe-relation' : Same as 'idempotent-relation'.
 * 'safe-relation' : Element +id+ becomes the +"rel"+ of an +<a>+ or +<link>+
tag. If 'unique' or 'descriptor' children are present, they are ignored.
Element +id+ may also become the "+class+" of the submit button of an
+HTML.FORM@method="GET"+. If 'unique' or 'descriptor' children are present, 
those children refer to other inputs of the same +HTML.FORM+.

=== ALPS and Collection+JSON ===
When applying ALPS to Collection+JSON, the following rules apply.

 * 'unique' : Undefined. (Alternately: the same as "descriptor")
 * 'descriptor' : Element ID refers to the "name" of a data field within an item.
 * 'link-relation' : Element ID refers to the "rel" of a link within an item. 
If child elements are present, they are ignored. OR Element ID refers to the 
"name" of a query in the document. If child rlementsare present, their IDs 
refer to the "name" attributes of data fields within the query.
 * 'idempotent-relation' : Undefined.
 * 'unsafe-relation' : Undefined.

=== ALPS and HAL ===
When applying ALPS to HAL (both XML and JSON formats), the folloiwng rules apply.

 * 'unique' : Undefined. (Alternately: the same as "descriptor")
 * 'descriptor' : Element ID refers to the "name" of a data field within an item.
 * 'link-relation' : Element ID refers to the "rel" of a link within an item. 
If child elements are present, they are ignored. OR Element ID refers to the 
"name" of a query in the document. If child elements are present, their IDs 
refer to the "name" attributes of data fields within the query.
 * 'idempotent-relation' : Undefined.
 * 'unsafe-relation' : Undefined.

=== ALPS and Siren ===
When appying ALPS to Siren, the following rules apply.

 * 'unique' : Undefined. (Alternately: the same as "descriptor")
 * 'descriptor' : On the top level, element ID refers to the "class" of an entity.
Within an entity, element ID refers to the "class" of a sub-entity, or
to a key within the entity's 'properties' dictionary. [TK uneasy about
this one, but it seems to require both.]
 * 'link-relation' : Within an entity, element ID refers to the "rel" of an
item in the entity's "links" dictionary, or to the "rel" attribute of
a sub-entity. Alternatively, the Element ID may refer to the "class" of an item in
the entity's "actions" dictionary, so long as the action's "method" is
GET. If this is the case, sub-elements of type "descriptor" refer to
values for "name" in the action's "fields" dictionary.
 * 'idempotent-relation'
 * 'unsafe-relation' : Within an entity, element ID
refers to the "class" of an item in the entity's "actions"
dictionary. For "idempotent-relation", the action's "method" must be
GET, PUT, or DELETE. For "unsafe-relation", any method is acceptable.

Sub-elements of type "descriptor" refer to values for "name" in the
action's "fields" dictionary.

=== ALPS and Atom ===
When applying ALPS to Atom, the following rules apply.

=== ALPS and OData ===
When applying ALPS to OData, the following rules apply.

== References ==


== Authors ==
Mike Amundsen <mca@amundsen.com>

Leonard Richardson <leonardr@segfault.org>

