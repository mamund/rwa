= Application-Level Profile Semantics =
Revision: 2012-10-29 (mca)

== Summary ==
This document describes a media type designed to allow Web application authors
and implementors a way to define, document, and apply application-level 
semantic descriptions to elements within media-type representations. This 
document also sets a standard for creating and registering ALPS document 
identifers and provides suggested conventions for applying ALPS descriptors 
to existing media types (HTML, JSON, and XML). 

This document registers two media-type identifiers with the IANA: 
+application/vnd.alps+xml+ and +application/vnd.alps+json+.

== Motivation ==
When implementing a hypermedia client/server application using an existing 
general media type (i.e. HTML, Atom, Collection+JSON, etc.), client and server 
instances need to share application-specific information such as data element 
names, link relation values, and state transfer parameters. This information 
is directly related to the application being implemented (i.e. accounting, 
contact management, etc.) rather than the media type used to represent the 
application state. 

Instead of creating (and registering) and entirely new media type (i.e. 
+application/accounting+), this standard allows representation authors define, 
document, and apply application-level semantic descriptions to elements 
within a representation. This increases the specificity of the representation 
without reducing the generality of the media type.

== Identifying an ALPS Document ==
ALPS vocabularies are identified by a unique URI. This URI can be in the form 
of a resolvable URL (i.e. +http://example.org/alps/accounting+) or it can be 
in the form of a URN (i.e. TK).

If the identifier is a URL, it SHOULD point to a valid ALPS document. the URL 
MAY point to a human-readable document that describes the ALPS specification 
for the identified use case.  If the identifier is a URN, it SHOULD NOT be 
treated as a resolvable identiferand instead SHOULD be treated as a unique 
name for the identified use case. 

All ALPS URIs MUST be unique and SHOULD be registered in the ALPS Registry 
located at [TK].

== ALPS Documents ==
ALPS Documents contain a machine-readable collection of semantic descriptors 
and their details. These document can be represented in either XML or JSON 
format. This section identifies the general elements and properties of an 
ALPS document, their meaning, and use. Additional sub sections provide 
specific details on how to construct a valid ALPS document in XML and in 
JSON format.

=== Compliance ===
An implementation is not compliant if it fails to satisfy one or more of the 
MUST or REQUIRED level requirements. An implementation that satisfies all 
the MUST or REQUIRED level and all the SHOULD level requirements is said 
to be "unconditionally compliant"; one that satisfies all the MUST level 
requirements but not all the SHOULD level requirements is said to be 
"conditionally compliant."

[NOTE]
===========================================
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", 
"SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to 
be interpreted as described in RFC 2119.
===========================================

=== ALPS Document Properties ===
The ALPS media type has a small set of properties. These appear
in both the XML and JSON formats, but are expressed in different ways. Below
is a list of the properties that can appear in an ALPS document.

==== +alps+ ====
Indicates the root of the ALPS document. This MUST be the first property
in the document. This property SHOULD have one or more +element+ child 
properties.

==== +appears+ ====
Indicates the appearance rules to apply to the related +element+.  Valid 
values for this element are: 'MUST', 'SHOULD', and 'MAY'. These values are 
to be treat as RFC 2119 key words. It SHOULD appear as a property 
of the +element+ and/or +child+ elements. If this property does not appear, 
the value SHOULD be treated as 'MAY'.

==== +cardinality+ ====
Indicates the number of times the related +element+ can appear within a single
representation. Valid values are 'single' and 'many'. This MAY appear
as a property of the +element+ and/pr +child+ elements. If this property does 
not appear, the value SHOULD be treated as 'many'.

==== +child+ ====
Indicates a child of the related +element+ This MAY appear as a 
child of the +element+. The +child+ property MAY have an +href+
property pointing to the full +element+ definition (see +href+ for details).

If no +href+ appears, then the +child+ property takes on the same features
as the +element+ property.

==== +description+ ====
A text field that contains free-form, usually human-readable, text describing
the meaning and use of the related +element+. It SHOULD appear as a 
child of +element+.

==== +element+ ====
Identifies a semantic descriptor. One or more +element+ blocks SHOULD appear
as children of the +alps+ property. 

This property MUST have the following properties:

 * +id+
 * +type+

It SHOULD have the following properties:

 * +appears+ 
 
It MAY have the following properties:

 * +cardinality+
 * +child+
 * +description+
 * +external_id+

==== +external_id+ ====
Indicates the value of the +element+. It MAY appear
as a property of the +element+.  This is used when this same value
has already been used as an +id+ value in the ALPS document. 

==== +href+ ====
Points to an +element+ either within the existing ALPS 
document or in another ALPS document. This MUST appear as part of the 
+child+ element. The value MUST be a valid URL.

==== +id+ ====
Indicates the semantic descriptor value for the related +element+. This
MUST appear for each +element+. The value of this property contains the 
text that will appear within the media type representation as the value of
that media type's semantic descriptor (see Applying ALPS to Existing Media
Types for details). If +external_id+ exists for the same +element+ the 
value of +external_id+ contains the value of the semantic descriptor, not 
value of +id+

==== +type+ ====
Indicates the type of representation control to which the +element+ is
applied. This MUST appear for each +element+ Below is the explanation of 
the valid values.

 * 'descriptor' refers to a state element (e.g. +HTML.SPAN+, +HTML.INPUT+, etc.).
 * 'safe-idempotent' refers to a hypermedia control that triggers a safe,
idempotent state transition (i.e. +HTTP.GET+, +HTTP.HEAD+, etc.).
 * 'unsafe-idempotent' refers to a hypermedia control that triggers an
unsafe, idempotent state transition (i.e. +HTTP.PUT+, +HTTP.DELETE+ etc.).
 * 'unsafe-nonidempotent' refers to a hypermedia control that triggers an
unsafe, non-idempotent state transition (i.e. +HTTP.POST+).
 
==== +version+ ====
Indicates the version number of the ALPS document. This SHOULD appear as a 
property of the +alps+ property. Currently the only valid value is '1.0'. 
If no value appears, then it SHOULD be set to '1.0'.

=== XML Representation ===
Below shows how ALPS Elements are expressed in the XML format.

---------------------------------
<alps version="1.0">

 <element id="hmaze" type="descriptor" appears="MUST">
   <description>Indicates the root of an hMaze document.</description>
    <child href="#collection"/>
    <child href="#item"/>
    <child href="#error"/>
    <child href="#cell"/>
    <child href="#inventory-link"/>
  </element>
                   
  <element id="collection" type="descriptor">
    <description>A collection of mazes.</description>
    <child href="#cell" cardinality="many" appears="MAY">
      <description>The opening cell of a maze</description>
    </child>
  </element>
                          
  <element id="item" type="descriptor">
    <description>A single maze.</description>
    <child href="#start"/ appears="SHOULD">
  </element>
                                    
  <element id="start" type="safe-idempotent">
    <description>The beginning cell of a maze.</description>
  </element>
                                        
  <element id="error" type="descriptor">
    <description>An error message.</description>
  </element>
                                            
  <element id="cell" type="descriptor">
    <description>A cell in a maze.</description>
    <child href="#title" appears="SHOULD">
      <description>The name of the cell, e.g. "Throne Room."</description>
    </child>
    <child href="#north" appears="MAY"/>
    <child href="#south" appears="MAY"/>
    <child href="#east" appears="MAY"/>
    <child href="#west" appears="MAY"/>
    <child href="#exit" appears="MAY"/>
    <child href="#current" appears="MUST"/>
  </element>
                                                                          
  <element id="north" type="safe-idempotent">
    <description>The cell to the north of this one.</description>
  </element>
                                                                              
  ...
  [similarly for south, east, west, exit, current.]
  ...
                                                                               
  <element id="inventory-link" external_id="inventory" type="safe-idempotent">
    <description>The player's inventory.</description>
  </element>
  
  <element id="inventory" type="descriptor">
    <description>
      Everything the player is carrying.
    </description>
    <child href="#treasure" cardinality="many" appears="MAY"/>
    <child href="#score" appears="MAY">
      <description>The player's total score.</description>
    </child>
  </element>
                                                                      
  <element id="treasure" type="descriptor">
    <id>treasure</id>
    <description>A treasure found in the maze.</description>
    <child href="#title" appears="SHOULD">
      <description>The name of this treasure, e.g. "Amethyst."</description>
    </child>
    <child href="#score" appears="MAY"/>
    <child href="#pickup" appears="MAY"/>
    <child href="#drop" appears="MAY"/>
  </element>
                                                                                  
  <element id="title" type="descriptor">
    <description>A title.</description>
  </element>
                                                                            
  <element id="score" type="descriptor">
    <description>A numeric score.</description>
  </element>
                                                                            
  <element id="pickup" type="unsafe-idempotent">
    <description>Picks up the treasure.</description>
  </element>
                                                     
  <element id="drop" type="unsafe-idempotent">
    <description>Drops the treasure.</description>
  </element>
                                                                                
</alps>
---------------------------------
=== JSON Representation ===
Below shows how ALPS Elements are expressed in the JSON format. 

[NOTE]
======
In the JSON format, the +element+ and +child+ properties are each expressed 
as an +ARRAY+ and are labeled +elements+ and +children+ respectively.
======

------------------------------------------------
{
  "alps" :
  "version" : "1.0",
  "elements" : [
    {
      "id" : "hmaze", 
      "type" : "descriptor", 
      "appears" : "MUST",
      "description" : "Indicates the root of an hMaze document",
      "children" : [
        {"href" : "#collection"},
        {"href" : "#item},
        {"href" : "#error"},
        {"href" : "#cell"},
        {"href" : "#inventory-link"}
      ]
    },
    {
      "id" : "collection",
      "type" : "descriptor",
      "description" : "A collection of mazes",
      "children" : [
        {
          "href" : "#cell", 
          "cardinality" : "many", 
          "appears" : "MAY",
          "description" : "The opening cell of a maze"
        }
      ]
    },
    {
      "id" : "item",
      "type" : "descriptor",
      "description" : "A single maze"
      "children" : [
        {"href" : "#start", "appears" : "SHOULD"}
      ]
    },
    {
      "id" : "start",
      "type" : "safe-idempotent",
      "description" : "The beginning cell of a  maze"
    },
    {
      "id" : "error",
      "type" : "descriptor",
      "description" : "An error message"
    },
    {
      "id" : "cell",
      "type" : "descriptor",
      "description" : "A cell in a maze",
      "children" : [
        {"href" : "#title", "appears" : "SHOULD", 
         "description" : "The name of the cell, e.g. \"Throne Room\""
        },
        {"href" : "#north", "appears" : "MAY"},
        {"href" : "#south", "appears" : "MAY"},
        {"href" : "#east", "appears" : "MAY"},
        {"href" : "#west", "appears" : "MAY"},
        {"href" : "#exit", "appears" : "MAY"},
        {"href" : "#current", "appears" : "MUST"}
      ]
    },
    {
      "id" : "north",
      "type" : "safe-idempotent",
      "description" : "The cell to the north of the current cell."
    },
    ... similary for south, east, west, exit, current ...
    {
      "id" : "inventory-link", 
      "external_id" : "inventory",
      "type" : "safe-idempotent",
      "description" : "The player's inventory"
    },
    {
      "id" : "inventory", 
      "type" : "descriptor",
      "description" : "Everything the player is carrying",
      "children" : [
        {"href" : "#treasure", "cardinality" : "many", "appears" : "MAY},
        {"href" : "#score", "appears" : "MAY", 
         "description" : "The player's total score"
        }
      ]
    },
    {
      "id" : "treasure",
      "type" : "descriptor",
      "description" : "A treasure found in the maze",
      "children" : [
        {"href" : "#title", "appears" : "SHOULD", 
         "description" : "The name of this treasure, e.g. \"Amethyst\""
        },
        {"href" : "#score", "appears" : "MAY"},
        {"href" : "#pickup", "appears" : "MAY"},
        {"href" : "#drop", "appears" : "MAY"}
      ]
    },
    {
      "id" : "title",
      "type" : "descriptor",
      "description" : "A title"
    },
    {
      "id" : "score",
      "type" : "descriptor",
      "description" : "A numeric score"
    },
    {
      "id" : "pickup",
      "type" : "unsafe-idempotent",
      "description" : "Picks up the treasure"
    },
    {
      "id" : "drop",
      "type" : "unsafe-idempotent",
      "description" : "Drops the treasure"
    }
  ]
} 
-----------------------------------------

== Applying ALPS to Existing Media Types ==
ALPS documents can be applied to various existing hypermedia types. Below
are a set of instructions on how to apply ALPS information to existing 
media types.

=== ALPS and HTML ===
When applying ALPS to HTML, the following rules apply.

'descriptor' :: The value of +id+ is applied to the +"class"+ attribute of 
an element. If the descriptor is a +child+ of a transition, the element SHOULD
be a +<INPUT>+, +<SELECT>+, or +<TEXTAREA>+ element.
 
'safe-idempotent' :: If no +child+ descriptors exist, the value of +id+ is 
applied to the +"rel"+ attribute of an +<A>+ or +<LINK>+ element. If one or
more +child+ descriptors exist, the value of +id+ is applied to the +"class"+
attribute of a +<FORM>+ which has it's +"method"+" attribute set to +get+ and
the +id+ values of any +child+ descriptors are applied to the +"class"+ attribute
of +<INPUT>+, +<SELECT>+, and/or +<TEXTAREA>+ elements encapsulated by the 
+<FORM>+.
 
'unsafe-idempotent' :: Undefined for HTML
 
'unsafe-nonidempotent' :: The value of +id+ is applied to the +"class"+ 
attribute of a +<FORM>+ which has it's +"method"+ attribute set to 
+post+ and the +id+ values of any +child+ descriptors are applied to the 
+"class"+ attribute of +<INPUT>+, +<SELECT>+, and/or +<TEXTAREA>+ elements 
encapsulated by the +<FORM>+.

==== NOTES ====
Since HTML has no built-in support for 'unsafe-nonidempotent' it 
is up to the implementor to decide how to support this transition when it 
appears within an ALPS document.

=== ALPS and Collection+JSON ===
When applying ALPS to Collection+JSON, the following rules apply.

'descriptor' :: The value of +id+ is applied to the +"name"+ property of a 
+{"data"}+ object.

'safe-idemptotent' :: The value of +id+ is applied to the +"rel"+ property of 
a +{"link"}+ object.

'unsafe-idempotent' :: The value of +id+ is applied to the +"rel"+ of a 
+{"template"}+ object.

'unsafe-nonidempotent' :: Undefined for Collection+JSON

==== NOTES ====
Since Collection+JSON does not support 'unsafe-nonidempotent' it is up to
the implementor to decide how to support this transition when it appears
within an ALPS document.

=== ALPS and HAL ===
When applying ALPS to HAL (both XML and JSON formats), the folloiwng rules apply.

'descriptor' :: The value of +id+ is applied to the "name" attribute of an item.

'safe-idempotent' :: The value of +id+ is applied to the "rel" of a link element.

'unsafe-idempotent' :: The value of +id+ is applied to the "rel" of a link element.

'unsafe-nonidempotent' :: The value of the +id+ is applied to the "rel" of a 
link element.

==== NOTES ====
HAL does not identify the state transition details (safe/unsafe, 
idempotent/non-idempotent) with a representation. Instead that information is
in the human-readable documentation associated with the link relation value.
For this reason, it is important to reference the documentation when determining
which ALPS element +id+ values to apply to which HAL +<LINK>+ elements.

[WARNING]
=========================================
MCA: I stopped editing at this point. The Siren+JSON, Atom, and OData
sections still need to be brought up-to-date with the rest of the spec.
=========================================

=== ALPS and Siren ===
When appying ALPS to Siren, the following rules apply.

 * 'unique' : Undefined. (Alternately: the same as "descriptor")
 * 'descriptor' : On the top level, element ID refers to the "class" of an entity.
Within an entity, element ID refers to the "class" of a sub-entity, or
to a key within the entity's 'properties' dictionary. [TK uneasy about
this one, but it seems to require both.]
 * 'link-relation' : Within an entity, element ID refers to the "rel" of an
item in the entity's "links" dictionary, or to the "rel" attribute of
a sub-entity. Alternatively, the Element ID may refer to the "class" of an item in
the entity's "actions" dictionary, so long as the action's "method" is
GET. If this is the case, sub-elements of type "descriptor" refer to
values for "name" in the action's "fields" dictionary.
 * 'idempotent-relation'
 * 'unsafe-relation' : Within an entity, element ID
refers to the "class" of an item in the entity's "actions"
dictionary. For "idempotent-relation", the action's "method" must be
GET, PUT, or DELETE. For "unsafe-relation", any method is acceptable.

Sub-elements of type "descriptor" refer to values for "name" in the
action's "fields" dictionary.

=== ALPS and Atom ===
When applying ALPS to Atom, the following rules apply.

=== ALPS and OData ===
When applying ALPS to OData, the following rules apply.

== References ==


== Authors ==
Mike Amundsen <mca@amundsen.com>

Leonard Richardson <leonardr@segfault.org>

